OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {

    /* This fix the default STACKSIZE of tasks */
    TASK {
        UINT32 STACKSIZE = 300 ;
    } ;

    /* This fix the default STACKSIZE of ISRs */
    ISR {
        UINT32 STACKSIZE = 200 ;
    } ;
};

CPU blink {
  OS config {
    STATUS = EXTENDED;
    PAINT_STACK = TRUE;
    PAINT_REGISTERS = TRUE;
    
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../../../..";
      APP_SRC = "blink.c";
      APP_NAME = "keil_debug.axf";
      CFLAGS  = "-O0";
      LDFLAGS = "-Map=blink.map";
      COMPILER = "arm-none-eabi-gcc";
      ASSEMBLER = "arm-none-eabi-as";
      LINKER = "arm-none-eabi-ld";
      COPIER = "arm-none-eabi-objcopy";
      SYSTEM = PYTHON;
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };
  
  APPMODE std {};
  
  TASK uart_rx {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    RESOURCE = uart_resource;
  };
  
  ALARM alarm_uart_rx {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = uart_rx;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 3;
      CYCLETIME = 3;
    };
  };

  TASK led_control {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    RESOURCE = uart_resource;
  };
  
  ALARM alarm_led_control {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = led_control;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 1;
      CYCLETIME = 1;
    };
  };

  TASK cmd_process {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    RESOURCE = uart_resource;
  };
  
  ALARM alarm_cmd_process {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = cmd_process;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 2;
      CYCLETIME = 10;
    };
  };

  ISR user_button { //on PC13
    CATEGORY = 2;
    PRIORITY = 10;
    SOURCE = EXTI15_10_IRQ { PINON13 = PC13 {TRIGGER = FALLING; PULL = NONE;};};
    RESOURCE = uart_resource;
  };

/*  ISR uart_rx { */
/*    CATEGORY = 1; */
/*    PRIORITY = 1; */
/*    SOURCE = USART2_IRQ; */
/*    RESOURCE = uart_resource; */
/*  }; */

  RESOURCE uart_resource {
    RESOURCEPROPERTY = STANDARD;
  };
};

